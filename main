import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Função para salvar os dados da obra em um arquivo Excel - nao ta salvando xlsx 
def salvar_obra(nome, contrato, itens, medicoes, os, previsoes, contratante, contratada):
    try:
        df = pd.read_excel('obras.xlsx')
    except FileNotFoundError:
        df = pd.DataFrame(
            columns=['Descrição', 'Contrato', 'Itens', 'Medições', 'OS', 'Previsões', 'Contratante', 'Contratada'])

    nova_obra = pd.DataFrame([[nome, contrato, itens, medicoes, os, previsoes, contratante, contratada]],
                             columns=['Descrição', 'Contrato', 'Itens', 'Medições', 'OS', 'Previsões', 'Contratante',
                                      'Contratada'])
    df = pd.concat([df, nova_obra], ignore_index=True)
    df.to_excel('obras.xlsx', index=False)

# Função para exibir os dados de obras
def mostrar_obras():
    try:
        df = pd.read_excel('obras.xlsx')
        st.write(df)
    except FileNotFoundError:
        st.write("Nenhuma obra cadastrada.")

# Função para excluir uma obra pelo nome
def excluir_obra(nome):
    try:
        df = pd.read_excel('obras.xlsx')
        df = df[df['Nome'] != nome]
        df.to_excel('obras.xlsx', index=False)
        st.success(f"Obra '{nome}' excluída com sucesso!")
    except FileNotFoundError:
        st.write("Nenhuma obra cadastrada para excluir.")

# Função para mostrar gráficos das medições
def gerar_grafico_medicoes():
    try:
        df = pd.read_excel('obras.xlsx')
        st.write("Selecione uma obra para visualizar as medições:")
        obra_selecionada = st.selectbox("Obras", df['Nome'].unique())

        # Seleciona a obra escolhida e acessa a coluna 'Medições'
        obra_df = df[df['Nome'] == obra_selecionada]
        medicoes = obra_df['Medições'].values[0]

        if isinstance(medicoes, str):
            medicoes = [float(x) for x in medicoes.split(',')]

        if isinstance(medicoes, list) and len(medicoes) > 0:
            plt.figure()
            plt.plot(range(1, len(medicoes) + 1), medicoes)  # Corrige o tamanho do eixo X
            plt.title(f'Medições da Obra: {obra_selecionada}')
            plt.xlabel('Mês')
            plt.ylabel('Valor da Medição')
            st.pyplot(plt)
        else:
            st.write("Medições inválidas ou não disponíveis para esta obra.")
    except FileNotFoundError:
        st.write("Nenhuma obra cadastrada.")
    except KeyError:
        st.write("Não há medições para esta obra.")

# Configuração inicial da página
if 'pagina' not in st.session_state:
    st.session_state.pagina = 'inicio'

# Página inicial com dois botões (Cadastro e Atualização de Obras)
if st.session_state.pagina == 'inicio':
    st.title("Sistema de Cadastro e Atualização de Obras")
    st.write("Escolha uma opção abaixo para prosseguir:")

    # Botão de cadastro de obras
    if st.button("Cadastro de Obras"):
        st.session_state.pagina = 'cadastro'

    # Botão de atualização de obras
    if st.button("Atualização de Obras"):
        st.session_state.pagina = 'atualizacao'

# Exibe o menu lateral e as opções quando o usuário entra em uma das páginas
else:
    menu = st.sidebar.selectbox("Menu", ["Cadastro de Obras", "Atualização de Obras", "Visualizar Gráficos", "Voltar"])

    # Se o usuário escolher "Cadastro de Obras" no menu lateral
    if menu == "Cadastro de Obras":
        st.header("Cadastro de Obras")

        # Campos do formulário de cadastro
        nome = st.text_input("Nome da Obra")
        contrato = st.text_input("Número de Contrato")
        itens = st.number_input("Quantidade de Itens", min_value=1)
        medicoes = st.number_input("Quantidade de Medições", min_value=1)
        os = st.text_input("Número da OS")
        previsoes = st.text_input("Medições (R$)")
        contratante = st.text_input("Contratante")
        contratada = st.text_input("Contratada")

        if st.button("Salvar Obra"):
            salvar_obra(nome, contrato, itens, medicoes, os, previsoes, contratante, contratada)
            st.success(f"Obra '{nome}' salva com sucesso!")

    # Se o usuário escolher "Atualização de Obras" no menu lateral
    elif menu == "Atualização de Obras":
        st.header("Atualização de Obras")

        # Exibe as obras cadastradas
        mostrar_obras()

        # Excluir uma obra
        obras = pd.read_excel('obras.xlsx')['Nome'].unique()
        obra_excluir = st.selectbox("Selecione uma obra para excluir", obras)

        if st.button("Excluir Obra"):
            excluir_obra(obra_excluir)

    # Se o usuário escolher "Visualizar Gráficos"
    elif menu == "Visualizar Gráficos":
        st.header("Gráficos de Medições")
        gerar_grafico_medicoes()

    # Opção para voltar à página inicial
    elif menu == "Voltar":
        st.session_state.pagina = 'inicio'
